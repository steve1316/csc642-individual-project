{"version":3,"sources":["Pages/Survey/listOfStates.js","components/Header.js","Pages/Survey/Survey.jsx","components/MapComponent.js","Pages/Results/Results.jsx","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","width","maxWidth","marginTop","marginLeft","title","Header","props","classes","className","AppBar","position","Toolbar","Typography","variant","listOfStates","require","margin","height","left","top","transform","boxShadow","background","overflow","card","formControl","spacing","minWidth","Survey","useState","firstName","setFirstName","lastName","setLastName","birthday","setBirthday","heightFT","setHeightFT","heightIN","setHeightIN","phone","setPhone","educationLevel","setEducationLevel","streetAddress","setStreetAddress","streetAddressExtra","setStreetAddressExtra","zipCode","setZipCode","city","setCity","state","setState","email","setEmail","confirmEmail","setConfirmEmail","checkedTermsAndConditions","setCheckedTermsAndConditions","checkedCaptcha","setCheckedCaptcha","checkedValidationNameError","setCheckedValidationNameError","checkedAddressError","setCheckedAddressError","checkedZipCodeError","setCheckedZipCodeError","checkedEmailError","setCheckedEmailError","checkedConfirmEmailError","setCheckedConfirmEmailError","containsError","setContainsError","addressErrorText","setAddressErrorText","zipCodeErrorText","setZipCodeErrorText","emailErrorText","setEmailErrorText","confirmEmailErrorText","setConfirmEmailErrorText","useEffect","sessionStorage","getItem","userData","JSON","parse","console","log","data","length","stringCheckedForLength","streetAddressNotEmpty","stringCheckedForAlphaNumeric","myString","i","charCode","charCodeAt","checkStringAlphaNumeric","zipCodeCheckedForLength","zipCodeNotEmpty","stringCheckedForNumeric","checkStringNumeric","emailCheckedForLength","emailNotEmpty","emailCheckedForValidation","test","emailsMatch","Card","CardHeader","style","CardContent","onSubmit","e","setItem","stringify","history","push","pathname","Grid","container","direction","justify","alignItems","item","xs","sm","TextField","error","helperText","id","label","type","value","onChange","target","required","textField","InputLabelProps","shrink","paddingTop","InputProps","inputProps","min","endAdornment","InputAdornment","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","select","defaultValue","map","index","MenuItem","key","sitekey","Checkbox","checked","buttonTitle","buttonDisabled","Button","disabled","color","buttonRender","mapStyles","maxHeight","MapContainer","this","coordinates","google","zoom","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","Results","isGeocodeDone","setIsGeocodeDone","mapCheck","setMapCheck","fullAddress","lati","long","showMap","Geocode","setApiKey","fromAddress","then","response","results","geometry","location","setTimeout","heightMessage","educationMessage","onClick","CircularProgress","renderResults","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9210967f.chunk.js","sourcesContent":["// This file contains a list of all 50 states via their abbreviations.\r\nconst listOfStates = [\r\n\t\"AL\",\r\n\t\"AK\",\r\n\t\"AZ\",\r\n\t\"AR\",\r\n\t\"CA\",\r\n\t\"CO\",\r\n\t\"CT\",\r\n\t\"DE\",\r\n\t\"FL\",\r\n\t\"GA\",\r\n\t\"HI\",\r\n\t\"ID\",\r\n\t\"IL\",\r\n\t\"IN\",\r\n\t\"IA\",\r\n\t\"KS\",\r\n\t\"KY\",\r\n\t\"LA\",\r\n\t\"ME\",\r\n\t\"MD\",\r\n\t\"MA\",\r\n\t\"MI\",\r\n\t\"MN\",\r\n\t\"MS\",\r\n\t\"MO\",\r\n\t\"MT\",\r\n\t\"NE\",\r\n\t\"NV\",\r\n\t\"NH\",\r\n\t\"NJ\",\r\n\t\"NM\",\r\n\t\"NY\",\r\n\t\"NC\",\r\n\t\"ND\",\r\n\t\"OH\",\r\n\t\"OK\",\r\n\t\"OR\",\r\n\t\"PA\",\r\n\t\"RI\",\r\n\t\"SC\",\r\n\t\"SD\",\r\n\t\"TN\",\r\n\t\"TX\",\r\n\t\"UT\",\r\n\t\"VA\",\r\n\t\"WA\",\r\n\t\"WV\",\r\n\t\"WI\",\r\n\t\"WY\"\r\n];\r\n\r\nmodule.exports = listOfStates;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\twidth: \"100vw\",\r\n\t\tmaxWidth: \"100vw\",\r\n\t\tmarginTop: -10,\r\n\t\tmarginLeft: -10\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1\r\n\t}\r\n}));\r\n\r\nfunction Header(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t{props.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, CardHeader, Card, CardContent, TextField, makeStyles, InputAdornment, MenuItem, FormControl, FormControlLabel, Checkbox, Button, FormLabel, RadioGroup, Radio } from \"@material-ui/core\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Header from \"../../components/Header\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\n\r\nconst listOfStates = require(\"./listOfStates\"); // Grab the list of all 50 states from listOfStates.js\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: \"40px auto\",\r\n\t\twidth: \"100vw\",\r\n\t\theight: \"80%\",\r\n\t\tmaxWidth: \"75%\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: \"50%\",\r\n\t\ttop: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tboxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t\tbackground: \"#f3f3f3\",\r\n\t\toverflow: \"auto\"\r\n\t},\r\n\tcard: {\r\n\t\toverflow: \"auto\"\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120\r\n\t}\r\n}));\r\n\r\nfunction Survey(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// Setting states for the data object and error validation for the survey form.\r\n\tconst [firstName, setFirstName] = useState(\"\");\r\n\tconst [lastName, setLastName] = useState(\"\");\r\n\tconst [birthday, setBirthday] = useState(\"\");\r\n\tconst [heightFT, setHeightFT] = useState(\"\");\r\n\tconst [heightIN, setHeightIN] = useState(\"\");\r\n\tconst [phone, setPhone] = useState(\"\");\r\n\tconst [educationLevel, setEducationLevel] = useState(\"\");\r\n\tconst [streetAddress, setStreetAddress] = useState(\"\");\r\n\tconst [streetAddressExtra, setStreetAddressExtra] = useState(\"\");\r\n\tconst [zipCode, setZipCode] = useState(\"\");\r\n\tconst [city, setCity] = useState(\"\");\r\n\tconst [state, setState] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [confirmEmail, setConfirmEmail] = useState(\"\");\r\n\tconst [checkedTermsAndConditions, setCheckedTermsAndConditions] = useState(false);\r\n\tconst [checkedCaptcha, setCheckedCaptcha] = useState(false);\r\n\tconst [checkedValidationNameError, setCheckedValidationNameError] = useState(false);\r\n\tconst [checkedAddressError, setCheckedAddressError] = useState(false);\r\n\tconst [checkedZipCodeError, setCheckedZipCodeError] = useState(false);\r\n\tconst [checkedEmailError, setCheckedEmailError] = useState(false);\r\n\tconst [checkedConfirmEmailError, setCheckedConfirmEmailError] = useState(false);\r\n\tconst [containsError, setContainsError] = useState(false);\r\n\tconst [addressErrorText, setAddressErrorText] = useState(\"\");\r\n\tconst [zipCodeErrorText, setZipCodeErrorText] = useState(\"\");\r\n\tconst [emailErrorText, setEmailErrorText] = useState(\"\");\r\n\tconst [confirmEmailErrorText, setConfirmEmailErrorText] = useState(\"\");\r\n\r\n\t// This useEffect gets called only once after refreshing or pressing the back button to repopulate the fields with your old information.\r\n\tuseEffect(() => {\r\n\t\tif (sessionStorage.getItem(\"userData\")) {\r\n\t\t\tconst userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\t\t\tconsole.log(\"Found your old data! Data: \", userData);\r\n\r\n\t\t\tsetFirstName(userData.firstName);\r\n\t\t\tsetLastName(userData.lastName);\r\n\t\t\tsetBirthday(userData.birthday);\r\n\t\t\tsetHeightFT(userData.heightFT);\r\n\t\t\tsetHeightIN(userData.heightIN);\r\n\t\t\tsetPhone(userData.phone);\r\n\t\t\tsetEducationLevel(userData.educationLevel);\r\n\t\t\tsetStreetAddress(userData.streetAddress);\r\n\t\t\tsetStreetAddressExtra(userData.streetAddressExtra);\r\n\t\t\tsetZipCode(userData.zipCode);\r\n\t\t\tsetCity(userData.city);\r\n\t\t\tsetState(userData.state);\r\n\t\t\tsetEmail(userData.email);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"You are starting fresh!\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// Every time the textfields are updated, this data object will be updated along with it to prepare for sending to Results page.\r\n\tconst data = {\r\n\t\tfirstName: firstName,\r\n\t\tlastName: lastName,\r\n\t\tbirthday: birthday,\r\n\t\theightFT: heightFT,\r\n\t\theightIN: heightIN,\r\n\t\tphone: phone,\r\n\t\teducationLevel: educationLevel,\r\n\t\tstreetAddress: streetAddress,\r\n\t\tstreetAddressExtra: streetAddressExtra,\r\n\t\tzipCode: zipCode,\r\n\t\tcity: city,\r\n\t\tstate: state,\r\n\t\temail: email,\r\n\t\tconfirmEmail: confirmEmail\r\n\t};\r\n\r\n\t// This useEffect will run everytime after data updates to check for form validation.\r\n\tuseEffect(() => {\r\n\t\t// Check to see if the full name is greater than 40 characters.\r\n\t\tif (firstName.length + lastName.length > 41) {\r\n\t\t\tsetCheckedValidationNameError(true);\r\n\t\t} else {\r\n\t\t\tsetCheckedValidationNameError(false);\r\n\t\t}\r\n\r\n\t\tvar stringCheckedForLength = false;\r\n\t\tvar streetAddressNotEmpty = false;\r\n\t\tvar stringCheckedForAlphaNumeric = checkStringAlphaNumeric(streetAddress); // Check the street address for alphanumeric characters.\r\n\t\tvar zipCodeCheckedForLength = false;\r\n\t\tvar zipCodeNotEmpty = false;\r\n\t\tvar stringCheckedForNumeric = checkStringNumeric(zipCode); // Check the zipcode for numeric characters.\r\n\t\tvar emailCheckedForLength = false;\r\n\t\tvar emailNotEmpty = false;\r\n\t\tvar emailCheckedForValidation = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(email); // Check the email against this regex.\r\n\t\tvar emailsMatch = false;\r\n\r\n\t\t// Check to see if the street address is greater than 40 characters.\r\n\t\tif (streetAddress.length < 41) {\r\n\t\t\tstringCheckedForLength = true;\r\n\t\t}\r\n\t\t// Check to see if street address is empty or not to prevent mistakenly showing an error.\r\n\t\tif (streetAddress !== \"\") {\r\n\t\t\tstreetAddressNotEmpty = true;\r\n\t\t}\r\n\r\n\t\t// Check to see if the zip code is less than 7 characters.\r\n\t\tif (zipCode.length < 6) {\r\n\t\t\tzipCodeCheckedForLength = true;\r\n\t\t}\r\n\t\t// Check to see if zip code is empty or not to prevent mistakenly showing an error.\r\n\t\tif (zipCode !== \"\") {\r\n\t\t\tzipCodeNotEmpty = true;\r\n\t\t}\r\n\r\n\t\t// Check to see if the email is greater than 40 characters.\r\n\t\tif (email.length < 41) {\r\n\t\t\temailCheckedForLength = true;\r\n\t\t}\r\n\t\t// Check to see if email is empty or not to prevent mistakenly showing an error.\r\n\t\tif (email !== \"\") {\r\n\t\t\temailNotEmpty = true;\r\n\t\t}\r\n\t\t// Check to see if email is equal in type and value to confirmEmail.\r\n\t\tif (email === confirmEmail) {\r\n\t\t\temailsMatch = true;\r\n\t\t}\r\n\r\n\t\t// Check boolean values and assign the appropriate errors and texts if need be for rerendering the textfields.\r\n\t\tif (stringCheckedForAlphaNumeric && stringCheckedForLength && streetAddressNotEmpty) {\r\n\t\t\tsetCheckedAddressError(false);\r\n\t\t} else if (!stringCheckedForAlphaNumeric && !stringCheckedForLength && streetAddressNotEmpty) {\r\n\t\t\tsetAddressErrorText(\"Address contains non-alphanumeric characters and cannot be more than 40 characters\");\r\n\t\t\tsetCheckedAddressError(true);\r\n\t\t} else if (!stringCheckedForAlphaNumeric && stringCheckedForLength && streetAddressNotEmpty) {\r\n\t\t\tsetAddressErrorText(\"Address contains non-alphanumeric characters\");\r\n\t\t\tsetCheckedAddressError(true);\r\n\t\t} else if (stringCheckedForAlphaNumeric && !stringCheckedForLength && streetAddressNotEmpty) {\r\n\t\t\tsetAddressErrorText(\"Address cannot be more than 40 characters\");\r\n\t\t\tsetCheckedAddressError(true);\r\n\t\t} else {\r\n\t\t\tsetCheckedAddressError(false); // Field is empty\r\n\t\t}\r\n\r\n\t\tif (zipCodeCheckedForLength && stringCheckedForNumeric && zipCodeNotEmpty) {\r\n\t\t\tsetCheckedZipCodeError(false);\r\n\t\t} else if (!zipCodeCheckedForLength && !stringCheckedForNumeric && zipCodeNotEmpty) {\r\n\t\t\tsetZipCodeErrorText(\"ZIP Code contains non-numeric characters and cannot be more than 5 numbers\");\r\n\t\t\tsetCheckedZipCodeError(true);\r\n\t\t} else if (zipCodeCheckedForLength && !stringCheckedForNumeric && zipCodeNotEmpty) {\r\n\t\t\tsetZipCodeErrorText(\"ZIP Code contains non-numeric characters\");\r\n\t\t\tsetCheckedZipCodeError(true);\r\n\t\t} else if (!zipCodeCheckedForLength && stringCheckedForNumeric && zipCodeNotEmpty) {\r\n\t\t\tsetZipCodeErrorText(\"ZIP Code cannot be more than 5 numbers\");\r\n\t\t\tsetCheckedZipCodeError(true);\r\n\t\t} else {\r\n\t\t\tsetCheckedZipCodeError(false); // Field is empty\r\n\t\t}\r\n\r\n\t\tif (emailCheckedForLength && emailCheckedForValidation && emailNotEmpty) {\r\n\t\t\tsetCheckedEmailError(false);\r\n\t\t} else if (!emailCheckedForLength && !emailCheckedForValidation && emailNotEmpty) {\r\n\t\t\tsetEmailErrorText(\"Invalid email and cannot be more than 40 characters\");\r\n\t\t\tsetCheckedEmailError(true);\r\n\t\t} else if (!emailCheckedForLength && emailCheckedForValidation && emailNotEmpty) {\r\n\t\t\tsetEmailErrorText(\"Email cannot be more than 40 characters\");\r\n\t\t\tsetCheckedEmailError(true);\r\n\t\t} else if (emailCheckedForLength && !emailCheckedForValidation && emailNotEmpty) {\r\n\t\t\tsetEmailErrorText(\"Invalid email\");\r\n\t\t\tsetCheckedEmailError(true);\r\n\t\t} else {\r\n\t\t\tsetCheckedEmailError(false); // Field empty\r\n\t\t}\r\n\r\n\t\tif (emailsMatch) {\r\n\t\t\tsetCheckedConfirmEmailError(false);\r\n\t\t} else {\r\n\t\t\tsetConfirmEmailErrorText(\"Emails must match!\");\r\n\t\t\tsetCheckedConfirmEmailError(true);\r\n\t\t}\r\n\r\n\t\t// If there were any errors, prevent the submit button from showing.\r\n\t\tif (checkedAddressError || checkedZipCodeError || checkedEmailError || checkedConfirmEmailError || checkedValidationNameError) {\r\n\t\t\tsetContainsError(true);\r\n\t\t} else {\r\n\t\t\tsetContainsError(false);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\t// Checks character codes against ASCII codes and returns false if character is not alphanumeric.\r\n\t//Otherwise, finish the for loop and then return true.\r\n\tfunction checkStringAlphaNumeric(myString) {\r\n\t\tfor (var i = 0; i < myString.length; i++) {\r\n\t\t\tvar charCode = myString.charCodeAt(i);\r\n\r\n\t\t\tif (!(charCode === 32) && !(charCode > 47 && charCode < 58) && !(charCode > 64 && charCode < 91) && !(charCode > 96 && charCode < 123)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Checks character codes against ASCII codes and returns false if character is not numeric.\r\n\t//Otherwise, finish the for loop and then return true.\r\n\tfunction checkStringNumeric(myString) {\r\n\t\tfor (var i = 0; i < myString.length; i++) {\r\n\t\t\tvar charCode = myString.charCodeAt(i);\r\n\r\n\t\t\tif (!(charCode > 47 && charCode < 58)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// This gets called after successfully completing the CAPTCHA.\r\n\tfunction recaptchaCheck() {\r\n\t\tsetCheckedCaptcha(true);\r\n\t}\r\n\r\n\t// Perform if statement checks against the requirements and update the button if errors occur or the user forgot something.\r\n\tfunction buttonRender() {\r\n\t\tvar buttonTitle = \"\";\r\n\t\tvar buttonDisabled = false;\r\n\t\tif (checkedTermsAndConditions && checkedCaptcha && !containsError) {\r\n\t\t\tbuttonTitle = \"Submit\";\r\n\t\t\tbuttonDisabled = false;\r\n\t\t} else if (!checkedTermsAndConditions && checkedCaptcha && !containsError) {\r\n\t\t\tbuttonTitle = \"Please accept the terms and conditions\";\r\n\t\t\tbuttonDisabled = true;\r\n\t\t} else if (checkedTermsAndConditions && !checkedCaptcha && !containsError) {\r\n\t\t\tbuttonTitle = \"Please accept the captcha\";\r\n\t\t\tbuttonDisabled = true;\r\n\t\t} else if (containsError) {\r\n\t\t\tbuttonTitle = \"Please resolve all errors\";\r\n\t\t\tbuttonDisabled = true;\r\n\t\t} else {\r\n\t\t\tbuttonTitle = \"Please accept the terms and conditions and Captcha\";\r\n\t\t\tbuttonDisabled = true;\r\n\t\t}\r\n\r\n\t\t// Conditional rendering of either a disabled submission button or a regular submission button with their appropriate button titles.\r\n\t\tif (buttonDisabled) {\r\n\t\t\treturn (\r\n\t\t\t\t<Button type=\"submit\" disabled variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t{buttonTitle}\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t{buttonTitle}\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// This gets called after clicking on the button to submit the form\r\n\tfunction submitSurveyForm() {\r\n\t\t// Save data to sessioStorage to account for page refresh to save user's work. Will be cleared when browser/window/tab is closed.\r\n\t\tsessionStorage.setItem(\"userData\", JSON.stringify(data));\r\n\r\n\t\t// Now send page information to Results Page.\r\n\t\tprops.history.push({\r\n\t\t\tpathname: \"/results\",\r\n\t\t\tstate: {\r\n\t\t\t\tdata\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title={\"CSC 642 Summer 2020 Individual Assignment - Steve Tu\"} />\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardHeader title=\"Data Survey Form\" />\r\n\t\t\t\t<hr style={{ maxWidth: \"95%\" }}></hr>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<form onSubmit={(e) => submitSurveyForm(e)}>\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t{checkedValidationNameError ? (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\thelperText=\"Full name cannot be more than 40 characters\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"first-name-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TextField id=\"first-name-textfield\" label=\"First Name\" type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t{checkedValidationNameError ? (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\thelperText=\"Full name cannot be more than 40 characters\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"last-name-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TextField id=\"last-name-textfield\" label=\"Last Name\" type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"birthday-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Birthday\"\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tvalue={birthday}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setBirthday(e.target.value)}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\tshrink: true\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"height-ft-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Height (optional)\"\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={heightFT}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setHeightFT(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tinputProps: { min: 0 },\r\n\t\t\t\t\t\t\t\t\t\tshrink: \"false\",\r\n\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">ft</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"height-in-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Height (optional)\"\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={heightIN}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setHeightIN(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tinputProps: { min: 0 },\r\n\t\t\t\t\t\t\t\t\t\tshrink: \"false\",\r\n\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">in</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<MuiPhoneNumber\r\n\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\tsetPhone(value);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Education Level (optional)</FormLabel>\r\n\t\t\t\t\t\t\t\t\t<RadioGroup aria-label=\"education-level\" name=\"education-level1\" value={educationLevel} onChange={(e) => setEducationLevel(e.target.value)}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"None\" control={<Radio />} label=\"None\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"High School\" control={<Radio />} label=\"High School\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"College\" control={<Radio />} label=\"College\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Graduate Studies\" control={<Radio />} label=\"Graduate Studies\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Ph.D\" control={<Radio />} label=\"Ph.D\" />\r\n\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{checkedAddressError ? (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\thelperText={addressErrorText}\r\n\t\t\t\t\t\t\t\t\t\tid=\"street-address-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Street Address\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={streetAddress}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tid=\"street-address-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Street Address\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={streetAddress}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"street-address-extra-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Apartment, unit, etc. (optional)\"\r\n\t\t\t\t\t\t\t\t\tvalue={streetAddressExtra}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddressExtra(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t{checkedZipCodeError ? (\r\n\t\t\t\t\t\t\t\t\t<TextField error helperText={zipCodeErrorText} id=\"zip-code-textfield\" label=\"ZIP Code\" value={zipCode} onChange={(e) => setZipCode(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TextField id=\"zip-code-textfield\" label=\"ZIP Code\" value={zipCode} onChange={(e) => setZipCode(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"city-textfield\" label=\"City\" value={city} onChange={(e) => setCity(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"textfield-select-state\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"State\"\r\n\t\t\t\t\t\t\t\t\tselect\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={state}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{listOfStates.map((state, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={state + \"-\" + index} value={state}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{state}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{checkedEmailError ? (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\thelperText={emailErrorText}\r\n\t\t\t\t\t\t\t\t\t\tid=\"email-address-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TextField id=\"email-address-textfield\" label=\"Email Address\" value={email} onChange={(e) => setEmail(e.target.value)} required variant=\"filled\" style={{ width: \"80%\" }} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{checkedConfirmEmailError ? (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\thelperText={confirmEmailErrorText}\r\n\t\t\t\t\t\t\t\t\t\tid=\"email-address-confirm-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm Email Address\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={confirmEmail}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setConfirmEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tid=\"email-address-confirm-textfield\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm Email Address\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={confirmEmail}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setConfirmEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"6LcKB7EZAAAAAOnfPRTQWnXMcjhq4AV_hhhsisw_\" onChange={recaptchaCheck} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Checkbox name=\"terms\" checked={checkedTermsAndConditions} onChange={(e) => setCheckedTermsAndConditions(e.target.checked)} required />}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"I accept the Terms and Conditions\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{buttonRender()}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Survey;\r\n","import React, { Component } from \"react\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\n\r\nconst mapStyles = {\r\n\twidth: \"250px\",\r\n\theight: \"250px\",\r\n\tmaxWidth: \"80%\",\r\n\tmaxHeight: \"80%\"\r\n};\r\n\r\n// Coordinates are passed via props inside the Results page to this component.\r\nexport class MapContainer extends Component {\r\n\trender() {\r\n\t\tconsole.log(\"Received props are : \", this.props.coordinates);\r\n\t\treturn (\r\n\t\t\t<Map google={this.props.google} zoom={14} style={mapStyles} initialCenter={{ lat: this.props.coordinates[\"lati\"], lng: this.props.coordinates[\"long\"] }}>\r\n\t\t\t\t<Marker position={{ lat: this.props.coordinates[\"lati\"], lng: this.props.coordinates[\"long\"] }} />\r\n\t\t\t</Map>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n\tapiKey: \"AIzaSyBYR-fyWSCdQ3XfZohzXX2adrSyta-qYGo\"\r\n})(MapContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Grid, CardHeader, Card, CardContent, makeStyles, CircularProgress, Button } from \"@material-ui/core\";\r\nimport MapContainer from \"../../components/MapComponent\";\r\nimport Geocode from \"react-geocode\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: \"100vw\",\r\n\t\tmaxWidth: \"75%\",\r\n\t\theight: \"80vh\",\r\n\t\tmaxHeight: \"50%\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: \"50%\",\r\n\t\ttop: \"30%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tmargin: \"40px auto\"\r\n\t},\r\n\tcard: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tboxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t\tbackground: \"#f3f3f3\",\r\n\t\theight: \"70vh\"\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120\r\n\t}\r\n}));\r\n\r\nfunction Results(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// These states will check if Geocode is ready for the Map to render.\r\n\tconst [isGeocodeDone, setIsGeocodeDone] = useState(false);\r\n\tconst [mapCheck, setMapCheck] = useState(false);\r\n\r\n\tlet fullAddress = \"\";\r\n\tvar coordinates = {\r\n\t\tlati: 0,\r\n\t\tlong: 0\r\n\t};\r\n\r\n\tfunction renderResults() {\r\n\t\tif (sessionStorage.getItem(\"userData\")) {\r\n\t\t\t// Grab the data from Survey page.\r\n\t\t\tconst userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\t\t\tconsole.log(\"History's data: \", userData);\r\n\r\n\t\t\t// Construct the full address minus the extra bit as it is unnecessary to get coordinates from Geocode.\r\n\t\t\tfullAddress = userData.streetAddress + \" \" + userData.city + \" \" + userData.state + \" \" + userData.zipCode;\r\n\r\n\t\t\tGeocode.setApiKey(\"AIzaSyBYR-fyWSCdQ3XfZohzXX2adrSyta-qYGo\");\r\n\r\n\t\t\t// Geocode will take the provided address and then return coordinates in the form of latitude and longtitude. It will then save them\r\n\t\t\t// and then wait for 2500ms for the Show Map button to render.\r\n\t\t\tGeocode.fromAddress(fullAddress).then(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\tconst { lat, lng } = response.results[0].geometry.location;\r\n\t\t\t\t\tcoordinates[\"lati\"] = lat;\r\n\t\t\t\t\tcoordinates[\"long\"] = lng;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetIsGeocodeDone(true);\r\n\t\t\t\t\t}, 2500);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tvar heightMessage = \"No height provided\";\r\n\t\t\tvar educationMessage = \"No education level provided\";\r\n\r\n\t\t\t// Assign appropriate values to height and education if the user did decide to fill them out since they are optional.\r\n\t\t\tif (userData.heightFT !== \"\" || userData.heightIN !== \"\") {\r\n\t\t\t\tvar heightFT = userData.heightFT;\r\n\t\t\t\tvar heightIN = userData.heightIN;\r\n\t\t\t\tif (userData.heightFT === \"\" && userData.heightIN !== \"\") {\r\n\t\t\t\t\theightFT = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (userData.heightFT !== \"\" && userData.heightIN === \"\") {\r\n\t\t\t\t\theightIN = 0;\r\n\t\t\t\t}\r\n\t\t\t\theightMessage = heightFT + \" ft \" + heightIN + \" in\";\r\n\t\t\t}\r\n\r\n\t\t\tif (userData.educationLevel !== \"\") {\r\n\t\t\t\teducationMessage = userData.educationLevel;\r\n\t\t\t}\r\n\r\n\t\t\t// Return this div populated with the user's information.\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Name: </strong>\r\n\t\t\t\t\t\t{userData.firstName + \" \" + userData.lastName}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Birthday: </strong>Born on {userData.birthday}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Height: </strong>\r\n\t\t\t\t\t\t{heightMessage}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Phone: </strong>\r\n\t\t\t\t\t\t{userData.phone}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Address: </strong>\r\n\t\t\t\t\t\t{userData.streetAddress + \" \" + userData.streetAddressExtra + \", \" + userData.city + \", \" + userData.state + \" \" + userData.zipCode}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Education Level: </strong>\r\n\t\t\t\t\t\t{educationMessage}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Email: </strong>\r\n\t\t\t\t\t\t{userData.email}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{isGeocodeDone ? (\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={showMap}>\r\n\t\t\t\t\t\t\tClick to show Map\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t// Return this if the user somehow arrived in the Results page without going through the Survey page.\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Did not receive data object inside history as its null.</h1>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showMap() {\r\n\t\t// Set booleans to show the map when the Show Map button is clicked.\r\n\t\tif (coordinates[\"lati\"] !== 0 && coordinates[\"long\"] !== 0) {\r\n\t\t\tconsole.log(\"Map is now shown!\");\r\n\t\t\tsetMapCheck(true);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Map's coordinates at (0,0)!\");\r\n\t\t\tsetMapCheck(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title={\"Results Verification Page - Steve Tu\"} />\r\n\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2} className={classes.root}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t<CardHeader title=\"Results from Survey\" />\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<CardContent>{renderResults()}</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t<CardHeader title=\"Google Map\" />\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t{mapCheck && (\r\n\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t<MapContainer coordinates={coordinates} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Import Pages\nimport Survey from \"./Pages/Survey/Survey\";\nimport Results from \"./Pages/Results/Results\";\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={Survey} />\n      <Route path=\"/survey\" component={Survey} />\n      <Route path=\"/results\" component={Results} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// HashRouter is needed for GitHub Pages to properly route users.\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}