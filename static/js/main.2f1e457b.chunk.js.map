{"version":3,"sources":["components/Header.js","Pages/Survey/Survey.jsx","components/MapComponent.js","Pages/Results/Results.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","width","maxWidth","marginTop","marginLeft","title","Header","props","classes","className","AppBar","position","Toolbar","Typography","variant","margin","height","left","top","transform","boxShadow","background","overflow","card","formControl","spacing","minWidth","Survey","useState","firstName","setFirstName","lastName","setLastName","birthday","setBirthday","heightFT","setHeightFT","heightIN","setHeightIN","phone","setPhone","educationLevel","setEducationLevel","streetAddress","setStreetAddress","streetAddressExtra","setStreetAddressExtra","zipCode","setZipCode","city","setCity","state","setState","email","setEmail","checkedTermsAndConditions","setCheckedTermsAndConditions","checkedCaptcha","setCheckedCaptcha","useEffect","sessionStorage","getItem","userData","JSON","parse","console","log","data","Card","CardHeader","style","CardContent","onSubmit","e","setItem","stringify","history","push","pathname","Grid","container","direction","justify","alignItems","item","xs","sm","TextField","id","label","type","value","onChange","target","required","textField","InputLabelProps","shrink","paddingTop","InputProps","inputProps","min","endAdornment","InputAdornment","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","select","defaultValue","map","index","MenuItem","key","sitekey","Checkbox","checked","Button","color","disabled","mapStyles","maxHeight","MapContainer","this","coordinates","google","zoom","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","Results","isGeocodeDone","setIsGeocodeDone","mapCheck","setMapCheck","fullAddress","lati","long","showMap","Geocode","setApiKey","fromAddress","then","response","results","geometry","location","setTimeout","error","heightMessage","educationMessage","onClick","CircularProgress","renderResults","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f1e457b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\twidth: \"100vw\",\r\n\t\tmaxWidth: \"100vw\",\r\n\t\tmarginTop: -10,\r\n\t\tmarginLeft: -10\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1\r\n\t}\r\n}));\r\n\r\nfunction Header(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t{props.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, CardHeader, Card, CardContent, TextField, makeStyles, InputAdornment, MenuItem, FormControl, FormControlLabel, Checkbox, Button, FormLabel, RadioGroup, Radio } from \"@material-ui/core\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Header from \"../../components/Header\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: \"40px auto\",\r\n\t\twidth: \"100vw\",\r\n\t\theight: \"80%\",\r\n\t\tmaxWidth: \"75%\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: \"50%\",\r\n\t\ttop: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tboxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t\tbackground: \"#f3f3f3\",\r\n\t\toverflow: \"auto\"\r\n\t},\r\n\tcard: {\r\n\t\toverflow: \"auto\"\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120\r\n\t}\r\n}));\r\n\r\nfunction Survey(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// Setting states for the data object for the survey.\r\n\r\n\tconst [firstName, setFirstName] = useState(\"\");\r\n\tconst [lastName, setLastName] = useState(\"\");\r\n\r\n\tconst [birthday, setBirthday] = useState(\"\");\r\n\r\n\tconst [heightFT, setHeightFT] = useState(\"\");\r\n\tconst [heightIN, setHeightIN] = useState(\"\");\r\n\r\n\tconst [phone, setPhone] = useState(\"\");\r\n\r\n\tconst [educationLevel, setEducationLevel] = useState(\"\");\r\n\r\n\tconst [streetAddress, setStreetAddress] = useState(\"\");\r\n\tconst [streetAddressExtra, setStreetAddressExtra] = useState(\"\");\r\n\tconst [zipCode, setZipCode] = useState(\"\");\r\n\tconst [city, setCity] = useState(\"\");\r\n\tconst [state, setState] = useState(\"\");\r\n\r\n\tconst [email, setEmail] = useState(\"\");\r\n\r\n\tconst [checkedTermsAndConditions, setCheckedTermsAndConditions] = useState(false);\r\n\tconst [checkedCaptcha, setCheckedCaptcha] = useState(false);\r\n\r\n\t// This gets called only once after refreshing or pressing the back button to repopulate the fields with your old information.\r\n\tuseEffect(() => {\r\n\t\tif (sessionStorage.getItem(\"userData\")) {\r\n\t\t\tconst userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\t\t\tconsole.log(\"Found your old data! Data: \", userData);\r\n\r\n\t\t\tsetFirstName(userData.firstName);\r\n\t\t\tsetLastName(userData.lastName);\r\n\t\t\tsetBirthday(userData.birthday);\r\n\t\t\tsetHeightFT(userData.heightFT);\r\n\t\t\tsetHeightIN(userData.heightIN);\r\n\t\t\tsetPhone(userData.phone);\r\n\t\t\tsetEducationLevel(userData.educationLevel);\r\n\t\t\tsetStreetAddress(userData.streetAddress);\r\n\t\t\tsetStreetAddressExtra(userData.streetAddressExtra);\r\n\t\t\tsetZipCode(userData.zipCode);\r\n\t\t\tsetCity(userData.city);\r\n\t\t\tsetState(userData.state);\r\n\t\t\tsetEmail(userData.email);\r\n\t\t\tsetCheckedTermsAndConditions(false);\r\n\t\t\tsetCheckedCaptcha(false);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"You are starting fresh!\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// Every time the textfields are updated, this data object will be updated along with it.\r\n\tconst data = {\r\n\t\tfirstName: firstName,\r\n\t\tlastName: lastName,\r\n\t\tbirthday: birthday,\r\n\t\theightFT: heightFT,\r\n\t\theightIN: heightIN,\r\n\t\tphone: phone,\r\n\t\teducationLevel: educationLevel,\r\n\t\tstreetAddress: streetAddress,\r\n\t\tstreetAddressExtra: streetAddressExtra,\r\n\t\tzipCode: zipCode,\r\n\t\tcity: city,\r\n\t\tstate: state,\r\n\t\temail: email,\r\n\t\tcheckedTermsAndConditions: checkedTermsAndConditions,\r\n\t\tcheckedCaptcha: checkedCaptcha\r\n\t};\r\n\r\n\tconst listOfStates = [\r\n\t\t\"AL\",\r\n\t\t\"AK\",\r\n\t\t\"AZ\",\r\n\t\t\"AR\",\r\n\t\t\"CA\",\r\n\t\t\"CO\",\r\n\t\t\"CT\",\r\n\t\t\"DE\",\r\n\t\t\"FL\",\r\n\t\t\"GA\",\r\n\t\t\"HI\",\r\n\t\t\"ID\",\r\n\t\t\"IL\",\r\n\t\t\"IN\",\r\n\t\t\"IA\",\r\n\t\t\"KS\",\r\n\t\t\"KY\",\r\n\t\t\"LA\",\r\n\t\t\"ME\",\r\n\t\t\"MD\",\r\n\t\t\"MA\",\r\n\t\t\"MI\",\r\n\t\t\"MN\",\r\n\t\t\"MS\",\r\n\t\t\"MO\",\r\n\t\t\"MT\",\r\n\t\t\"NE\",\r\n\t\t\"NV\",\r\n\t\t\"NH\",\r\n\t\t\"NJ\",\r\n\t\t\"NM\",\r\n\t\t\"NY\",\r\n\t\t\"NC\",\r\n\t\t\"ND\",\r\n\t\t\"OH\",\r\n\t\t\"OK\",\r\n\t\t\"OR\",\r\n\t\t\"PA\",\r\n\t\t\"RI\",\r\n\t\t\"SC\",\r\n\t\t\"SD\",\r\n\t\t\"TN\",\r\n\t\t\"TX\",\r\n\t\t\"UT\",\r\n\t\t\"VA\",\r\n\t\t\"WA\",\r\n\t\t\"WV\",\r\n\t\t\"WI\",\r\n\t\t\"WY\"\r\n\t];\r\n\r\n\t// This gets called after successfully completing the CAPTCHA.\r\n\tfunction recaptchaCheck(value) {\r\n\t\t//console.log(\"Captcha value: \", value);\r\n\t\tsetCheckedCaptcha(true);\r\n\t}\r\n\r\n\t// This gets called after clicking on the button to submit the form\r\n\tfunction submitSurveyForm() {\r\n\t\t// Save data to sessioStorage to account for page refresh to save user's work. Will be cleared when browser/window/tab is closed.\r\n\t\tsessionStorage.setItem(\"userData\", JSON.stringify(data));\r\n\r\n\t\t// Now send page information to Results Page.\r\n\t\tprops.history.push({\r\n\t\t\tpathname: \"/results\",\r\n\t\t\tstate: {\r\n\t\t\t\tdata\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title={\"CSC 642 Summer 2020 Individual Assignment - Steve Tu\"} />\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardHeader title=\"Data Survey Form\" />\r\n\t\t\t\t<hr style={{ maxWidth: \"95%\" }}></hr>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<form onSubmit={(e) => submitSurveyForm(e)}>\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"first-name-textfield\" label=\"First Name\" type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"last-name-textfield\" label=\"Last Name\" type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"birthday-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Birthday\"\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tvalue={birthday}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setBirthday(e.target.value)}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\tshrink: true\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"height-ft-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Height (optional)\"\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={heightFT}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setHeightFT(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tinputProps: { min: 0 },\r\n\t\t\t\t\t\t\t\t\t\tshrink: \"false\",\r\n\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">ft</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"height-in-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Height (optional)\"\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tvalue={heightIN}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setHeightIN(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tinputProps: { min: 0 },\r\n\t\t\t\t\t\t\t\t\t\tshrink: \"false\",\r\n\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">in</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<MuiPhoneNumber\r\n\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\tsetPhone(value);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Education Level (optional)</FormLabel>\r\n\t\t\t\t\t\t\t\t\t<RadioGroup aria-label=\"education-level\" name=\"education-level1\" value={educationLevel} onChange={(e) => setEducationLevel(e.target.value)}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"None\" control={<Radio />} label=\"None\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"High School\" control={<Radio />} label=\"High School\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"College\" control={<Radio />} label=\"College\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Graduate Studies\" control={<Radio />} label=\"Graduate Studies\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Ph.D\" control={<Radio />} label=\"Ph.D\" />\r\n\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"street-address-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Street Address\"\r\n\t\t\t\t\t\t\t\t\tvalue={streetAddress}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"street-address-extra-textfield\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Apartment, unit, etc. (optional)\"\r\n\t\t\t\t\t\t\t\t\tvalue={streetAddressExtra}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddressExtra(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"zip-code-textfield\" label=\"ZIP Code\" value={zipCode} onChange={(e) => setZipCode(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"city-textfield\" label=\"City\" value={city} onChange={(e) => setCity(e.target.value)} required variant=\"filled\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"textfield-select-state\" label=\"State\" select defaultValue=\"\" value={state} onChange={(e) => setState(e.target.value)} required variant=\"filled\">\r\n\t\t\t\t\t\t\t\t\t{listOfStates.map((state, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={state + \"-\" + index} value={state}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{state}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"email-address-textfield\" label=\"Email Address\" value={email} onChange={(e) => setEmail(e.target.value)} required variant=\"filled\" style={{ width: \"80%\" }} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField id=\"email-address-confirm-textfield\" label=\"Confirm Email Address\" required variant=\"filled\" style={{ width: \"80%\" }} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"6LcKB7EZAAAAAOnfPRTQWnXMcjhq4AV_hhhsisw_\" onChange={recaptchaCheck} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Checkbox name=\"terms\" checked={checkedTermsAndConditions} onChange={(e) => setCheckedTermsAndConditions(e.target.checked)} required />}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"I accept the Terms and Conditions\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{checkedTermsAndConditions ? (\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : checkedCaptcha ? (\r\n\t\t\t\t\t\t\t\t\t<Button disabled variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\tPlease accept the terms and conditions\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Button disabled variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\tPlease accept the terms and conditions and Captcha\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Survey;\r\n","import React, { Component } from \"react\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\n\r\nconst mapStyles = {\r\n\twidth: \"250px\",\r\n\theight: \"250px\",\r\n\tmaxWidth: \"80%\",\r\n\tmaxHeight: \"80%\"\r\n};\r\n\r\n// Coordinates are passed via props inside the Results page to this component.\r\nexport class MapContainer extends Component {\r\n\trender() {\r\n\t\tconsole.log(\"Received props are : \", this.props.coordinates);\r\n\t\treturn (\r\n\t\t\t<Map google={this.props.google} zoom={14} style={mapStyles} initialCenter={{ lat: this.props.coordinates[\"lati\"], lng: this.props.coordinates[\"long\"] }}>\r\n\t\t\t\t<Marker position={{ lat: this.props.coordinates[\"lati\"], lng: this.props.coordinates[\"long\"] }} />\r\n\t\t\t</Map>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n\tapiKey: \"AIzaSyBYR-fyWSCdQ3XfZohzXX2adrSyta-qYGo\"\r\n})(MapContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Grid, CardHeader, Card, CardContent, makeStyles, CircularProgress, Button } from \"@material-ui/core\";\r\nimport MapContainer from \"../../components/MapComponent\";\r\nimport Geocode from \"react-geocode\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: \"100vw\",\r\n\t\tmaxWidth: \"75%\",\r\n\t\theight: \"80vh\",\r\n\t\tmaxHeight: \"50%\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: \"50%\",\r\n\t\ttop: \"30%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\t//boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t\t//background: \"#f3f3f3\",\r\n\t\tmargin: \"40px auto\"\r\n\t},\r\n\tcard: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tboxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t\tbackground: \"#f3f3f3\",\r\n\t\theight: \"70vh\"\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120\r\n\t}\r\n}));\r\n\r\nfunction Results(props) {\r\n\tconst classes = useStyles();\r\n\tconst [isGeocodeDone, setIsGeocodeDone] = useState(false);\r\n\tconst [mapCheck, setMapCheck] = useState(false);\r\n\r\n\tlet fullAddress = \"\";\r\n\tvar coordinates = {\r\n\t\tlati: 0,\r\n\t\tlong: 0\r\n\t};\r\n\r\n\tfunction renderResults() {\r\n\t\tif (sessionStorage.getItem(\"userData\")) {\r\n\t\t\tconst userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\t\t\tconsole.log(\"History's data: \", userData);\r\n\r\n\t\t\tfullAddress = userData.streetAddress + \" \" + userData.city + \" \" + userData.state + \" \" + userData.zipCode;\r\n\r\n\t\t\tGeocode.setApiKey(\"AIzaSyBYR-fyWSCdQ3XfZohzXX2adrSyta-qYGo\");\r\n\r\n\t\t\tGeocode.fromAddress(fullAddress).then(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\tconst { lat, lng } = response.results[0].geometry.location;\r\n\t\t\t\t\tcoordinates[\"lati\"] = lat;\r\n\t\t\t\t\tcoordinates[\"long\"] = lng;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetIsGeocodeDone(true);\r\n\t\t\t\t\t}, 2500);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tvar heightMessage = \"No height provided\";\r\n\t\t\tvar educationMessage = \"No education level provided\";\r\n\r\n\t\t\tif (userData.heightFT !== \"\" || userData.heightIN !== \"\") {\r\n\t\t\t\tvar heightFT = userData.heightFT;\r\n\t\t\t\tvar heightIN = userData.heightIN;\r\n\t\t\t\tif (userData.heightFT === \"\" && userData.heightIN !== \"\") {\r\n\t\t\t\t\theightFT = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (userData.heightFT !== \"\" && userData.heightIN === \"\") {\r\n\t\t\t\t\theightIN = 0;\r\n\t\t\t\t}\r\n\t\t\t\theightMessage = heightFT + \" ft \" + heightIN + \" in\";\r\n\t\t\t}\r\n\r\n\t\t\tif (userData.educationLevel !== \"\") {\r\n\t\t\t\teducationMessage = userData.educationLevel;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Name: </strong>\r\n\t\t\t\t\t\t{userData.firstName + \" \" + userData.lastName}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Birthday: </strong>Born on {userData.birthday}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Height: </strong>\r\n\t\t\t\t\t\t{heightMessage}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Phone: </strong>\r\n\t\t\t\t\t\t{userData.phone}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Address: </strong>\r\n\t\t\t\t\t\t{userData.streetAddress + \" \" + userData.streetAddressExtra + \", \" + userData.city + \", \" + userData.state + \" \" + userData.zipCode}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Education Level: </strong>\r\n\t\t\t\t\t\t{educationMessage}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Email: </strong>\r\n\t\t\t\t\t\t{userData.email}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{isGeocodeDone ? (\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={showMap}>\r\n\t\t\t\t\t\t\tClick to show Map\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Did not receive data object inside history as its null.</h1>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showMap() {\r\n\t\tif (coordinates[\"lati\"] !== 0 && coordinates[\"long\"] !== 0) {\r\n\t\t\tconsole.log(\"Map is now shown!\");\r\n\t\t\tsetMapCheck(true);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Map's coordinates at (0,0)!\");\r\n\t\t\tsetMapCheck(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title={\"Results Verification Page - Steve Tu\"} />\r\n\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2} className={classes.root}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t<CardHeader title=\"Results from Survey\" />\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<CardContent>{renderResults()}</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t<CardHeader title=\"Google Map\" />\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t{mapCheck && (\r\n\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t<MapContainer coordinates={coordinates} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Import Pages\nimport Survey from \"./Pages/Survey/Survey\";\nimport Results from \"./Pages/Results/Results\";\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={Survey} />\n      <Route path=\"/survey\" component={Survey} />\n      <Route path=\"/results\" component={Results} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// HashRouter is needed for GitHub Pages to properly route users.\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}