{"version":3,"sources":["Pages/Survey/Survey.jsx","components/MapComponent.js","Pages/Results/Results.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","width","height","maxWidth","position","left","top","transform","boxShadow","background","overflow","card","formControl","spacing","minWidth","Survey","props","classes","useState","firstName","setFirstName","lastName","setLastName","birthday","setBirthday","heightFT","setHeightFT","heightIN","setHeightIN","educationLevel","setEducationLevel","streetAddress","setStreetAddress","streetAddressExtra","setStreetAddressExtra","zipCode","setZipCode","city","setCity","state","setState","email","setEmail","checkedTermsAndConditions","setCheckedTermsAndConditions","checkedCaptcha","setCheckedCaptcha","useEffect","sessionStorage","getItem","userData","JSON","parse","console","log","data","Card","className","CardHeader","title","style","CardContent","onSubmit","e","setItem","stringify","history","push","pathname","Grid","container","direction","justify","alignItems","item","xs","sm","TextField","id","label","type","value","onChange","target","required","variant","textField","InputLabelProps","shrink","paddingTop","InputProps","inputProps","min","endAdornment","InputAdornment","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","helperText","select","defaultValue","map","index","MenuItem","key","sitekey","Checkbox","checked","Button","color","disabled","mapStyles","MapContainer","this","coordinates","google","zoom","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","Results","fullAddress","lati","long","Geocode","setApiKey","fromAddress","then","response","results","geometry","location","error","heightMessage","renderResults","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3454d4c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Grid, CardHeader, Card, CardContent, TextField, makeStyles, InputAdornment, MenuItem, FormControl, FormControlLabel, Checkbox, Button, FormLabel, RadioGroup, Radio } from \"@material-ui/core\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t// root: {\r\n\t// \twidth: \"100vw\",\r\n\t// \tmaxWidth: \"75%\",\r\n\t// \tposition: \"absolute\",\r\n\t// \tleft: \"50%\",\r\n\t// \ttop: \"50%\",\r\n\t// \ttransform: \"translate(-50%, -50%)\",\r\n\t// \tboxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t// \tbackground: \"#f3f3f3\",\r\n\t// \tmargin: \"40px auto\"\r\n\t// },\r\n\troot: {\r\n\t\tmargin: \"40px auto\",\r\n\t\twidth: \"100vw\",\r\n\t\theight: \"80%\",\r\n\t\tmaxWidth: \"75%\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: \"50%\",\r\n\t\ttop: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tboxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n\t\tbackground: \"#f3f3f3\",\r\n\t\toverflow: \"auto\"\r\n\t},\r\n\tcard: {\r\n\t\toverflow: \"auto\"\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120\r\n\t}\r\n}));\r\n\r\nfunction Survey(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// Setting states for the data object for the survey.\r\n\r\n\tconst [firstName, setFirstName] = useState(\"\");\r\n\tconst [lastName, setLastName] = useState(\"\");\r\n\r\n\tconst [birthday, setBirthday] = useState(\"\");\r\n\r\n\tconst [heightFT, setHeightFT] = useState(0);\r\n\tconst [heightIN, setHeightIN] = useState(0);\r\n\r\n\tconst [educationLevel, setEducationLevel] = useState(\"\");\r\n\r\n\tconst [streetAddress, setStreetAddress] = useState(\"\");\r\n\tconst [streetAddressExtra, setStreetAddressExtra] = useState(\"\");\r\n\tconst [zipCode, setZipCode] = useState(\"\");\r\n\tconst [city, setCity] = useState(\"\");\r\n\tconst [state, setState] = useState(\"\");\r\n\r\n\tconst [email, setEmail] = useState(\"\");\r\n\r\n\tconst [checkedTermsAndConditions, setCheckedTermsAndConditions] = useState(false);\r\n\tconst [checkedCaptcha, setCheckedCaptcha] = useState(false);\r\n\r\n\t// This gets called only once after refreshing or pressing the back button to repopulate the fields with your old information.\r\n\tuseEffect(() => {\r\n\t\tif (sessionStorage.getItem(\"userData\")) {\r\n\t\t\tconst userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\t\t\tconsole.log(\"Found your old data! Data: \", userData);\r\n\r\n\t\t\tsetFirstName(userData.firstName);\r\n\t\t\tsetLastName(userData.lastName);\r\n\t\t\tsetBirthday(userData.birthday);\r\n\t\t\tsetHeightFT(userData.heightFT);\r\n\t\t\tsetHeightIN(userData.heightIN);\r\n\t\t\tsetEducationLevel(userData.educationLevel);\r\n\t\t\tsetStreetAddress(userData.streetAddress);\r\n\t\t\tsetStreetAddressExtra(userData.streetAddressExtra);\r\n\t\t\tsetZipCode(userData.zipCode);\r\n\t\t\tsetCity(userData.city);\r\n\t\t\tsetState(userData.state);\r\n\t\t\tsetEmail(userData.email);\r\n\t\t\tsetCheckedTermsAndConditions(false);\r\n\t\t\tsetCheckedCaptcha(false);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"You are starting fresh!\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// Every time the textfields are updated, this data object will be updated along with it.\r\n\tconst data = {\r\n\t\tfirstName: firstName,\r\n\t\tlastName: lastName,\r\n\t\tbirthday: birthday,\r\n\t\theightFT: heightFT,\r\n\t\theightIN: heightIN,\r\n\t\teducationLevel: educationLevel,\r\n\t\tstreetAddress: streetAddress,\r\n\t\tstreetAddressExtra: streetAddressExtra,\r\n\t\tzipCode: zipCode,\r\n\t\tcity: city,\r\n\t\tstate: state,\r\n\t\temail: email,\r\n\t\tcheckedTermsAndConditions: checkedTermsAndConditions,\r\n\t\tcheckedCaptcha: checkedCaptcha\r\n\t};\r\n\r\n\tconst listOfStates = [\r\n\t\t\"AL\",\r\n\t\t\"AK\",\r\n\t\t\"AZ\",\r\n\t\t\"AR\",\r\n\t\t\"CA\",\r\n\t\t\"CO\",\r\n\t\t\"CT\",\r\n\t\t\"DE\",\r\n\t\t\"FL\",\r\n\t\t\"GA\",\r\n\t\t\"HI\",\r\n\t\t\"ID\",\r\n\t\t\"IL\",\r\n\t\t\"IN\",\r\n\t\t\"IA\",\r\n\t\t\"KS\",\r\n\t\t\"KY\",\r\n\t\t\"LA\",\r\n\t\t\"ME\",\r\n\t\t\"MD\",\r\n\t\t\"MA\",\r\n\t\t\"MI\",\r\n\t\t\"MN\",\r\n\t\t\"MS\",\r\n\t\t\"MO\",\r\n\t\t\"MT\",\r\n\t\t\"NE\",\r\n\t\t\"NV\",\r\n\t\t\"NH\",\r\n\t\t\"NJ\",\r\n\t\t\"NM\",\r\n\t\t\"NY\",\r\n\t\t\"NC\",\r\n\t\t\"ND\",\r\n\t\t\"OH\",\r\n\t\t\"OK\",\r\n\t\t\"OR\",\r\n\t\t\"PA\",\r\n\t\t\"RI\",\r\n\t\t\"SC\",\r\n\t\t\"SD\",\r\n\t\t\"TN\",\r\n\t\t\"TX\",\r\n\t\t\"UT\",\r\n\t\t\"VA\",\r\n\t\t\"WA\",\r\n\t\t\"WV\",\r\n\t\t\"WI\",\r\n\t\t\"WY\"\r\n\t];\r\n\r\n\t// This gets called after successfully completing the CAPTCHA.\r\n\tfunction recaptchaCheck(value) {\r\n\t\t//console.log(\"Captcha value: \", value);\r\n\t\tsetCheckedCaptcha(true);\r\n\t}\r\n\r\n\t// This gets called after clicking on the button to submit the form\r\n\tfunction submitSurveyForm() {\r\n\t\t// Save data to sessioStorage to account for page refresh to save user's work. Will be cleared when browser/window/tab is closed.\r\n\t\tsessionStorage.setItem(\"userData\", JSON.stringify(data));\r\n\r\n\t\t// Now send page information to Results Page.\r\n\t\tprops.history.push({\r\n\t\t\tpathname: \"/results\",\r\n\t\t\tstate: {\r\n\t\t\t\tdata\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardHeader title=\"Data Survey for Students\" />\r\n\t\t\t<hr style={{ maxWidth: \"95%\" }}></hr>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<form onSubmit={(e) => submitSurveyForm(e)}>\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField id=\"first-name-textfield\" label=\"First Name\" type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required variant=\"outlined\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField id=\"last-name-textfield\" label=\"Last Name\" type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} required variant=\"outlined\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"birthday-textfield\"\r\n\t\t\t\t\t\t\t\tlabel=\"Birthday\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tvalue={birthday}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setBirthday(e.target.value)}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\tshrink: true\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"height-ft-textfield\"\r\n\t\t\t\t\t\t\t\tlabel=\"Height (optional)\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tvalue={heightFT}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setHeightFT(e.target.value)}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\tinputProps: { min: 0 },\r\n\t\t\t\t\t\t\t\t\tshrink: \"false\",\r\n\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">ft</InputAdornment>\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"height-in-textfield\"\r\n\t\t\t\t\t\t\t\tlabel=\"Height (optional)\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tvalue={heightIN}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setHeightIN(e.target.value)}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\tinputProps: { min: 0 },\r\n\t\t\t\t\t\t\t\t\tshrink: \"false\",\r\n\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">in</InputAdornment>\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Education Level (optional)</FormLabel>\r\n\t\t\t\t\t\t\t\t<RadioGroup aria-label=\"education-level\" name=\"education-level1\" value={educationLevel} onChange={(e) => setEducationLevel(e.target.value)}>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Some High School\" control={<Radio />} label=\"Some High School\" />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"High School\" control={<Radio />} label=\"High School\" />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"College\" control={<Radio />} label=\"College\" />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Graduate Studies\" control={<Radio />} label=\"Graduate Studies\" />\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"Ph.D\" control={<Radio />} label=\"Ph.D\" />\r\n\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"street-address-textfield\"\r\n\t\t\t\t\t\t\t\tlabel=\"Street Address\"\r\n\t\t\t\t\t\t\t\tvalue={streetAddress}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"street-address-extra-textfield\"\r\n\t\t\t\t\t\t\t\tlabel=\"Apartment, unit, etc. (optional)\"\r\n\t\t\t\t\t\t\t\tvalue={streetAddressExtra}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setStreetAddressExtra(e.target.value)}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"80%\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField id=\"zip-code-textfield\" label=\"ZIP Code\" value={zipCode} onChange={(e) => setZipCode(e.target.value)} required variant=\"outlined\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField id=\"city-textfield\" label=\"City\" value={city} onChange={(e) => setCity(e.target.value)} required variant=\"outlined\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} sm={3}>\r\n\t\t\t\t\t\t\t<TextField id=\"textfield-select-state\" label=\"State\" helperText=\"Please select your state\" select defaultValue=\"\" value={state} onChange={(e) => setState(e.target.value)} required>\r\n\t\t\t\t\t\t\t\t{listOfStates.map((state, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={state + \"-\" + index} value={state}>\r\n\t\t\t\t\t\t\t\t\t\t\t{state}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField id=\"email-address-textfield\" label=\"Email Address\" value={email} onChange={(e) => setEmail(e.target.value)} required variant=\"outlined\" style={{ width: \"80%\" }} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField id=\"email-address-confirm-textfield\" label=\"Confirm Email Address\" required variant=\"outlined\" style={{ width: \"80%\" }} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"6LcKB7EZAAAAAOnfPRTQWnXMcjhq4AV_hhhsisw_\" onChange={recaptchaCheck} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox name=\"terms\" checked={checkedTermsAndConditions} onChange={(e) => setCheckedTermsAndConditions(e.target.checked)} required />}\r\n\t\t\t\t\t\t\t\t\tlabel=\"I accept the Terms and Conditions\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} style={{ paddingTop: 10 }}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t{checkedTermsAndConditions ? (\r\n\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : checkedCaptcha ? (\r\n\t\t\t\t\t\t\t\t<Button disabled variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\tPlease accept the terms and conditions\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Button disabled variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\tPlease accept the terms and conditions and Captcha\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Survey;\r\n","import React, { Component } from \"react\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\n\r\nconst mapStyles = {\r\n  width: \"50%\",\r\n  height: \"50%\"\r\n};\r\n\r\n// Coordinates are passed via props inside the Results page to this component.\r\nexport class MapContainer extends Component {\r\n  render() {\r\n    console.log(\"Received props are : \", this.props.coordinates);\r\n    return (\r\n      <Map google={this.props.google} zoom={14} style={mapStyles} initialCenter={{ lat: this.props.coordinates[\"lati\"], lng: this.props.coordinates[\"long\"] }}>\r\n        <Marker position={{ lat: this.props.coordinates[\"lati\"], lng: this.props.coordinates[\"long\"] }} />\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBYR-fyWSCdQ3XfZohzXX2adrSyta-qYGo\"\r\n})(MapContainer);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, CardHeader, Card, CardContent, TextField, makeStyles, InputAdornment, MenuItem, FormControl, FormControlLabel, Checkbox, Button } from \"@material-ui/core\";\r\nimport MapContainer from \"../../components/MapComponent\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    maxWidth: \"75%\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n    background: \"#f3f3f3\",\r\n    margin: \"40px auto\"\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nfunction Results(props) {\r\n  const classes = useStyles();\r\n\r\n  let fullAddress = \"\";\r\n  var mapCheck = false;\r\n  var coordinates = {\r\n    lati: 0,\r\n    long: 0\r\n  };\r\n\r\n  function renderResults() {\r\n    if (sessionStorage.getItem(\"userData\")) {\r\n      const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      console.log(\"History's data: \", userData);\r\n\r\n      fullAddress = userData.streetAddress + \" \" + userData.city + \" \" + userData.state + \" \" + userData.zipCode;\r\n\r\n      Geocode.setApiKey(\"AIzaSyBYR-fyWSCdQ3XfZohzXX2adrSyta-qYGo\");\r\n\r\n      Geocode.fromAddress(fullAddress).then(\r\n        (response) => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          console.log(\"Lat: \" + lat + \" long: \" + lng);\r\n          coordinates[\"lati\"] = lat;\r\n          coordinates[\"long\"] = lng;\r\n          console.log(\"Local Coordinates: \" + coordinates[\"lati\"] + \" \" + coordinates[\"long\"]);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n      var heightMessage = \"No height provided\";\r\n\r\n      if (userData.heightFT !== \"\" || userData.heightIN !== \"\") {\r\n        var heightFT = userData.heightFT;\r\n        var heightIN = userData.heightIN;\r\n        if (userData.heightFT === \"\" && userData.heightIN !== \"\") {\r\n          heightFT = 0;\r\n        }\r\n        if (userData.heightFT !== \"\" && userData.heightIN === \"\") {\r\n          heightIN = 0;\r\n        }\r\n        heightMessage = heightFT + \" ft \" + heightIN + \" in\";\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <hr></hr>\r\n          <p>\r\n            <strong>Name: </strong>\r\n            {userData.firstName + \" \" + userData.lastName}\r\n          </p>\r\n          <p>\r\n            <strong>Birthday: </strong>Born on {userData.birthday}\r\n          </p>\r\n          <p>\r\n            <strong>Height: </strong>\r\n            {heightMessage}\r\n          </p>\r\n          <p>\r\n            <strong>Address: </strong>\r\n            {userData.streetAddress + \" \" + userData.streetAddressExtra + \", \" + userData.city + \", \" + userData.state + \" \" + userData.zipCode}\r\n          </p>\r\n          <p>\r\n            <strong>Education Level: </strong>I'm missing education levels. Not shown on Figma!\r\n          </p>\r\n          <p>\r\n            <strong>Email: </strong>\r\n            {userData.email}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Did not receive data object inside history as its null.</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={1} className={classes.root}>\r\n      <Grid item xs>\r\n        <Card className={classes.card}>\r\n          <CardHeader title=\"Results from Survey\" />\r\n          <CardContent>{renderResults()}</CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs>\r\n        <Card className={classes.card}>\r\n          <CardHeader title=\"Google Map\" />\r\n          <CardContent>\r\n            <MapContainer coordinates={coordinates} />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Import Pages\nimport Survey from \"./Pages/Survey/Survey\";\nimport Results from \"./Pages/Results/Results\";\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={Survey} />\n      <Route path=\"/survey\" component={Survey} />\n      <Route path=\"/results\" component={Results} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// HashRouter is needed for GitHub Pages to properly route users.\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}